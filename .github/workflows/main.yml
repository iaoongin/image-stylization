# This is a basic workflow to help you get started with Actions
env:
  tag: latest
  image_name: image-stylization
  namespace: yffjglcms
  register_server: registry.cn-shenzhen.aliyuncs.com
  REGISTER_USERNAME: ${{ secrets.REGISTER_USERNAME }}
  REGISTER_PASSWORD: ${{ secrets.REGISTER_PASSWORD }}
  
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: 开始
        run: |
          echo Hello, world!

#       - name:  登录阿里云Docker Registry
#         run: |
#           echo ${{env.REGISTER_PASSWORD}} | docker login --username=${{env.REGISTER_USERNAME}} registry.cn-shenzhen.aliyuncs.com

      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://${{env.register_server}}
          username: "${{ secrets.REGISTRY_USERNAME }}"
          password: "${{ secrets.REGISTRY_PASSWORD }}"
      - name: Build and push image
        run: |
          docker build -t ${{env.register_server}}/${{env.namespace}}/${{env.image_name}}:${{env.tag}} .
          docker push ${{env.register_server}}/${{env.namespace}}/${{env.image_name}}:${{env.tag}}

#       - name: 镜像构建
#         run: |
#           docker build -t ${{env.namespace}}/${{env.image_name}}:${{env.tag}} -t ${{env.register_server}}/${{env.namespace}}/${{env.image_name}}:${{env.tag}} .
      
#       - name: 将镜像推送到Registry
#         run: |
#           docker push ${{env.register_server}}/${{env.namespace}}/${{env.image_name}}:${{env.tag}}
